using Gtk 4.0;
using Adw 1;

template $BzFullView: Adw.Bin {
  child: Adw.ViewStack stack {
    enable-transitions: true;

    Adw.ViewStackPage {
      name: "empty";
      title: _("Empty");

      child: Adw.StatusPage {
        icon-name: "sad-computer-symbolic";
        title: _("No Results");
        description: _("Try a different search query");
      };
    }

    Adw.ViewStackPage {
      name: "content";
      title: _("Content");

      child: Adw.BreakpointBin {
        width-request: 360;
        height-request: 450;

        Adw.Breakpoint {
          condition ("max-width: 700px")

          setters {
            context_bar.orientation: vertical;
            context_bar.spacing: 12;
            formfactor_support_tile_wide.visible: false;
            formfactor_support_tile_narrow.visible: true;
          }
        }

        child: Adw.BreakpointBin breakpoint_bin {
          width-request: 360;
          height-request: 450;

          Adw.Breakpoint breakpoint {
            condition ("max-width: 500px")

            setters {
              top_box.margin-start: 10;
              top_box.margin-end: 10;
              bottom_box.margin-start: 10;
              bottom_box.margin-end: 10;
              not_icon.orientation: vertical;
              app_icon.valign: start;
              app_icon.pixel-size: 96;
            }
          }

          child: Overlay {
            [overlay]
            Box shadow_overlay {
              valign: start;
              height-request: 3;
              can-target: false;
            }

            child: ScrolledWindow main_scroll {
              child: Box main_box {
                orientation: vertical;
                vexpand: false;
                margin-top: 15;
                margin-bottom: 15;
                spacing: 20;

                Adw.Clamp {
                  maximum-size: 800;
                  tightening-threshold: 1000;

                  child: Box top_box {
                    orientation: vertical;
                    margin-start: 25;
                    margin-end: 25;
                    spacing: 20;

                    Box header_box {
                      orientation: horizontal;
                      spacing: 20;

                      Image app_icon {
                        valign: center;
                        halign: center;
                        pixel-size: 128;
                        paintable: bind template.entry-group as <$BzEntryGroup>.icon-paintable;

                        styles [
                          "icon-dropshadow",
                        ]
                      }

                      Box not_icon {
                        orientation: horizontal;
                        baseline-position: center;
                        halign: fill;
                        hexpand: true;
                        spacing: 15;

                        Box {
                          orientation: vertical;
                          valign: center;
                          hexpand: true;
                          spacing: 3;

                          Label {
                            styles [
                              "title-1",
                              "app-title",
                            ]

                            xalign: 0.0;
                            wrap: true;
                            wrap-mode: word_char;
                            natural-wrap-mode: word;
                            label: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.title;
                          }

                          Box {
                            orientation: horizontal;
                            spacing: 10;

                            Label {
                              styles [
                                "accent",
                                "app-developer",
                              ]

                              xalign: 0.0;
                              wrap: true;
                              wrap-mode: word_char;
                              natural-wrap-mode: word;
                              label: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.developer;
                            }

                            Revealer {
                              transition-type: crossfade;
                              reveal-child: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.verified;
                              visible: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.verified;

                              child: Image {
                                styles [
                                  "accent",
                                ]

                                has-tooltip: true;
                                tooltip-text: _("Verified by the original developers");
                                icon-name: "verified-checkmark-symbolic";
                                icon-size: normal;
                              };
                            }
                          }

                          Box {
                            spacing: 8;

                            Button {
                              visible: bind $invert_boolean($is_null(template.ui-entry as <$BzResult>.object as <$BzEntry>.donation-url) as <bool>) as <bool>;

                              styles [
                                "small-pill",
                                "suggested-action",
                                "support",
                              ]

                              margin-top: 8;
                              valign: start;
                              halign: start;
                              has-tooltip: true;
                              tooltip-text: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.donation-url;
                              clicked => $support_cb(template);

                              child: Adw.ButtonContent {
                                label: _("Support");
                                icon-name: "heart-filled-symbolic";
                              };
                            }

                            Revealer forge_stars {
                              transition-type: slide_down;
                              reveal-child: false;

                              child: Button {
                                styles [
                                  "small-pill",
                                  "suggested-action",
                                  "star",
                                ]

                                margin-top: 8;
                                valign: start;
                                halign: start;
                                has-tooltip: true;
                                tooltip-text: _("Repository Star Count");
                                clicked => $forge_cb(template);

                                child: Box {
                                  hexpand: false;
                                  orientation: horizontal;
                                  spacing: 10;

                                  Image {
                                    icon-name: "starred-symbolic";
                                  }

                                  Label forge_stars_label {}
                                };
                              };
                            }
                          }
                        }

                        Box {
                          orientation: horizontal;
                          spacing: 10;
                          valign: center;

                          Button run_button {
                            styles [
                              "pill",
                            ]

                            has-tooltip: true;
                            label: _("Open");
                            visible: bind $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.removable) as <bool>) as <bool>;
                            sensitive: bind $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.removable-and-available) as <bool>) as <bool>;
                            clicked => $run_cb(template);
                          }

                          Button {
                            styles [
                              "suggested-action",
                              "pill",
                            ]

                            has-tooltip: true;
                            tooltip-text: _("Download & Install Application");
                            visible: bind $logical_and($invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.installable) as <bool>) as <bool>, $is_zero(template.entry-group as <$BzEntryGroup>.removable) as <bool>) as <bool>;
                            sensitive: bind $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.installable-and-available) as <bool>) as <bool>;
                            label: _("Install");
                            clicked => $install_cb(template);
                          }

                          Button remove_button {
                            styles [
                              "destructive-action",
                              "circular",
                            ]

                            width-request: 45;
                            has-tooltip: true;
                            tooltip-text: _("Uninstall Application");
                            visible: bind $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.removable) as <bool>) as <bool>;
                            sensitive: bind $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.removable-and-available) as <bool>) as <bool>;
                            icon-name: "user-trash-symbolic";
                            clicked => $remove_cb(template);
                          }

                          Button addons_btn {
                            styles [
                              "circular",
                            ]

                            visible: bind $logical_and($invert_boolean($is_null(template.entry-group as <$BzEntryGroup>.ui-entry as <$BzResult>.object as <$BzEntry>.addons) as <bool>) as <bool>, $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.removable) as <bool>) as <bool>) as <bool>;
                            width-request: 45;
                            has-tooltip: true;
                            tooltip-text: _("Manage Add-ons");
                            clicked => $install_addons_cb(template);
                            icon-name: "puzzle-piece-symbolic";
                          }

                          Button {
                            styles [
                              "circular",
                            ]

                            width-request: 45;
                            has-tooltip: true;
                            icon-name: "download-plus-symbolic";
                            tooltip-text: _("Install Other Version");
                            visible: bind $logical_and($invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.installable) as <bool>) as <bool>, $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.removable) as <bool>) as <bool>) as <bool>;
                            sensitive: bind $invert_boolean($is_zero(template.entry-group as <$BzEntryGroup>.installable-and-available) as <bool>) as <bool>;
                            clicked => $install_cb(template);
                          }
                        }
                      }
                    }

                    Box context_bar {
                      hexpand: false;
                      homogeneous: true;
                      spacing: 0;
                      orientation: horizontal;
                      halign: fill;

                      styles [
                        "app-context-bar",
                      ]

                      Box {
                        homogeneous: true;

                        $BzContextTile download_size_tile {
                          label: _("Download");
                          has-tooltip: true;
                          tooltip-text: bind $format_size_tooltip(template.ui-entry as <$BzResult>.object as <$BzEntry>.size) as <string>;
                          lozenge-style: "grey";
                          clicked => $size_cb(template);

                          lozenge-child: Label {
                            justify: center;
                            label: bind $format_size(template.ui-entry as <$BzResult>.object as <$BzEntry>.size) as <string>;
                            lines: 3;
                            ellipsize: end;
                            halign: center;
                            wrap: true;
                            xalign: 0.5;
                            use-markup: true;
                          };
                        }

                        $BzContextTile license_tile {
                          label: bind $get_license_label(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-floss) as <string>;
                          lozenge-style: bind $bool_to_string(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-floss, "grey", "warning") as <string>;
                          clicked => $license_cb(template);
                          has-tooltip: true;
                          tooltip-text: bind $format_license_tooltip(template.ui-entry as <$BzResult>.object as <$BzEntry>.project-license) as <string>;

                          lozenge-child: Box {
                            spacing: 6;

                            Image {
                              icon-name: bind $get_license_icon(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-floss, 0) as <string>;
                            }

                            Image {
                              icon-name: bind $get_license_icon(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-floss, 1) as <string>;
                            }
                          };
                        }

                        $BzContextTile formfactor_support_tile_wide {
                          label: bind $get_formfactor_label(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly) as <string>;
                          has-tooltip: true;
                          tooltip-text: bind $get_formfactor_tooltip(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly) as <string>;
                          clicked => $formfactor_cb(template);
                          lozenge-style: "grey";

                          lozenge-child: Box {
                            Image {
                              visible: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly as <bool>;
                              icon-name: "device-support-adaptive-symbolic";
                              pixel-size: 56;

                              styles [
                                "wide-image",
                              ]
                            }

                            Image {
                              visible: bind $invert_boolean(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly) as <bool>;
                              icon-name: "device-support-desktop-symbolic";
                            }
                          };
                        }

                        $BzContextTile formfactor_support_tile_narrow {
                          visible: false;
                          label: bind $get_formfactor_label(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly) as <string>;
                          has-tooltip: true;
                          tooltip-text: bind $get_formfactor_tooltip(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly) as <string>;
                          lozenge-style: bind $bool_to_string(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly, "grey", "error") as <string>;
                          clicked => $formfactor_cb(template);

                          lozenge-child: Box {
                            Image {
                              visible: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly as <bool>;
                              icon-name: "device-support-adaptive-symbolic";
                              pixel-size: 56;

                              styles [
                                "wide-image",
                              ]
                            }

                            Image {
                              visible: bind $invert_boolean(template.ui-entry as <$BzResult>.object as <$BzEntry>.is-mobile-friendly) as <bool>;
                              icon-name: "device-support-desktop-symbolic";
                            }
                          };
                        }
                      }

                      Box {
                        homogeneous: true;

                        $BzContextTile {
                          has-tooltip: true;
                          tooltip-text: bind $get_age_rating_tooltip(template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating) as <string>;
                          can-target: false;
                          label: bind $get_age_rating_label(template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating) as <string>;
                          lozenge-style: bind $get_age_rating_style(template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating) as <string>;

                          lozenge-child: Box {
                            Label {
                              visible: bind $is_between(0, 17, template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating as <int>) as <bool>;
                              label: bind $format_age_rating(template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating as <int>) as <string>;
                            }

                            Label {
                              visible: bind $is_between(18, 100, template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating as <int>) as <bool>;
                              label: bind $format_age_rating(template.ui-entry as <$BzResult>.object as <$BzEntry>.age-rating as <int>) as <string>;
                            }
                          };
                        }

                        $BzContextTile {
                          can-target: bind $invert_boolean($is_null(template.debounced-ui-entry) as <bool>) as <bool>;
                          clicked => $dl_stats_cb(template);
                          label: _("Downloads/mo");
                          has-tooltip: true;
                          tooltip-text: bind $format_recent_downloads_tooltip(template.debounced-ui-entry as <$BzResult>.object as <$BzEntry>.recent-downloads) as <string>;
                          lozenge-style: "grey";

                          lozenge-child: Label {
                            justify: center;
                            label: bind $format_recent_downloads(template.debounced-ui-entry as <$BzResult>.object as <$BzEntry>.recent-downloads) as <string>;
                            halign: center;
                            use-markup: true;
                          };
                        }

                        $BzContextTile {
                          can-target: bind template.entry-group as <$BzEntryGroup>.is_flathub as <bool>;
                          clicked => $open_flathub_url_cb(template);
                          label: bind template.entry-group as <$BzEntryGroup>.remote-repos-string;
                          lozenge-style: bind $bool_to_string(template.entry-group as <$BzEntryGroup>.is_flathub, "flathub", "grey") as <string>;

                          lozenge-child: Box {
                            spacing: 6;

                            Image {
                              icon-name: "network-server-symbolic";
                            }

                            Image {
                              visible: bind template.entry-group as <$BzEntryGroup>.is_flathub as <bool>;
                              icon-name: "flathub-symbolic";
                            }
                          };
                        }
                      }
                    }
                  };
                }

                Box screenshot_box {
                  Adw.Spinner {
                    vexpand: true;
                    visible: bind $invert_boolean(template.debounced-ui-entry as <$BzResult>.resolved as <bool>) as <bool>;
                  }

                  $BzScreenshotsCarousel screenshots {
                    vexpand: true;
                    hexpand: true;
                    visible: bind template.debounced-ui-entry as <$BzResult>.resolved as <bool>;

                    model: $BzLazyAsyncTextureModel {
                      model: bind template.debounced-ui-entry as <$BzResult>.object as <$BzEntry>.screenshot-paintables;
                    };
                  }
                }

                Adw.Clamp {
                  maximum-size: 800;
                  tightening-threshold: 1000;

                  child: Box bottom_box {
                    orientation: vertical;
                    margin-start: 25;
                    margin-end: 25;
                    margin-bottom: 20;
                    spacing: 20;

                    Label {
                      styles [
                        "title-2",
                      ]

                      margin-start: 5;
                      margin-top: 20;
                      valign: start;
                      xalign: 0;
                      wrap: true;
                      wrap-mode: word_char;
                      label: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.description;
                    }

                    $BzAppstreamDescriptionRender {
                      appstream-description: bind template.ui-entry as <$BzResult>.object as <$BzEntry>.long-description;
                      margin-start: 5;
                    }

                    $BzShareList {
                      urls: bind template.debounced-ui-entry as <$BzResult>.object as <$BzEntry>.share-urls;
                    }

                    $BzReleasesList releases_list {
                      version-history: bind template.debounced-ui-entry as <$BzResult>.object as <$BzEntry>.version-history;
                    }
                  };
                }
              };
            };
          };
        };
      };
    }
  };
}
