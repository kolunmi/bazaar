using Gtk 4.0;
using Adw 1;

template $BzWindow: Adw.ApplicationWindow {
  title: _("Bazaar");
  default-width: 1220;
  default-height: 900;
  width-request: 650;
  height-request: 400;

  content: $BzCometOverlay comet_overlay {
    child: Adw.BreakpointBin breakpoint_bin {
      width-request: 550;
      height-request: 450;

      child: Adw.ToolbarView toolbar_view {
        top-bar-style: raised_border;
        bottom-bar-style: raised_border;
        reveal-bottom-bars: false;

        content: Adw.OverlaySplitView split_view {
          show-sidebar: false;
          pin-sidebar: true;
          sidebar-position: end;

          sidebar: Adw.ViewStack transactions_stack {
            enable-transitions: true;
            transition-duration: 200;

            Adw.ViewStackPage {
              name: "empty";
              title: _("Empty");

              child: Adw.StatusPage {
                icon-name: "folder-download-symbolic";
                title: _("Transactions Will Appear Here");
              };
            }

            Adw.ViewStackPage {
              name: "content";
              title: _("Content");

              child: Adw.ToolbarView {
                bottom-bar-style: flat;

                content: ScrolledWindow transactions {
                  width-request: 400;
                  hscrollbar-policy: never;
                  propagate-natural-height: true;

                  child: ListView list_view {
                    styles [
                      "navigation-sidebar",
                    ]

                    model: NoSelection no_selection {
                      model: bind template.state as <$BzStateInfo>.transaction-manager as <$BzTransactionManager>.transactions;
                    };

                    factory: BuilderListItemFactory {
                      template ListItem {
                        activatable: false;

                        child: $BzTransactionView {
                          margin-start: "5";
                          margin-end: "5";
                          margin-top: "10";
                          margin-bottom: "10";
                          transaction: bind template.item;
                        };
                      }
                    };
                  };
                };

                [bottom]
                Adw.HeaderBar {
                  show-start-title-buttons: false;
                  show-end-title-buttons: false;
                  show-title: false;

                  [end]
                  Box {
                    styles [
                      "linked",
                    ]

                    ToggleButton transactions_pause {
                      has-tooltip: true;
                      active: bind template.state as <$BzStateInfo>.transaction-manager as <$BzTransactionManager>.paused;
                      toggled => $pause_transactions_cb(template);
                    }

                    Button transactions_stop {
                      has-tooltip: true;
                      tooltip-text: _("Halt the execution of transactions");
                      icon-name: "media-playback-stop-symbolic";
                      sensitive: bind template.state as <$BzStateInfo>.transaction-manager as <$BzTransactionManager>.active;
                      clicked => $stop_transactions_cb(template);
                    }

                    Button transactions_clear {
                      has-tooltip: true;
                      tooltip-text: _("Clear all finished transactions");
                      icon-name: "edit-clear-all-symbolic";
                      clicked => $transactions_clear_cb(template);
                    }
                  }
                }
              };
            }
          };

          content: Adw.OverlaySplitView search_split {
            show-sidebar: false;
            pin-sidebar: true;
            sidebar-position: start;
            notify::show-sidebar => $search_split_open_changed_cb(template);

            sidebar: $BzSearchWidget search_widget {
              width-request: 400;
              state: bind template.state;
              select => $search_widget_select_cb(template);
            };

            content: Adw.ToastOverlay toasts {
              child: Overlay {
                child: Adw.ViewStack main_stack {
                  enable-transitions: true;
                  transition-duration: 200;

                  Adw.ViewStackPage {
                    name: "offline";
                    title: _("Offline");

                    child: Adw.StatusPage {
                      icon-name: "connected-squares-x";
                      title: _("Offline");
                    };
                  }

                  Adw.ViewStackPage {
                    name: "loading";
                    title: _("Loading");

                    child: Box {
                      halign: fill;
                      valign: center;
                      orientation: vertical;
                      spacing: 15;

                      Button {
                        styles [
                          "flat"
                        ]

                        halign: center;
                        
                        child: Image {
                          icon-name: "io.github.kolunmi.Bazaar";
                          pixel-size: 32;
                        };
                      }
                      
                      $BzGlobalProgress {
                        halign: center;
                        height-request: 20;
                        expand-size: 150;
                        active: bind template.state as <$BzStateInfo>.busy;
                        fraction: bind template.state as <$BzStateInfo>.busy-progress;
                      }

                      Label {
                        styles [
                          "heading"
                        ]

                        ellipsize: end;
                        label: bind template.state as <$BzStateInfo>.busy-label;
                      }
                    };
                  }

                  Adw.ViewStackPage {
                    name: "browse";
                    title: _("Browse");

                    child: $BzBrowseWidget browse {
                      content-provider: bind template.state as <$BzStateInfo>.curated-provider;
                      group-selected => $browser_group_selected_cb(template);
                    };
                  }

                  Adw.ViewStackPage {
                    name: "view";
                    title: _("App View");

                    child: $BzFullView full_view {
                      state: bind template.state;
                      transaction-manager: bind template.state as <$BzStateInfo>.transaction-manager;
                      install => $full_view_install_cb(template);
                      remove => $full_view_remove_cb(template);
                    };
                  }

                  Adw.ViewStackPage {
                    name: "flathub";
                    title: _("Flathub");

                    child: $BzFlathubPage {
                      state: bind template.state as <$BzStateInfo>.flathub;
                      group-selected => $browser_group_selected_cb(template);
                    };
                  }
                  
                  Adw.ViewStackPage {
                    name: "installed";
                    title: _("Installed");

                    child: $BzInstalledPage {
                      state: bind template.state;
                      model: bind template.state as <$BzStateInfo>.all-installed-entries;
                      install => $installed_page_install_cb(template);
                      remove => $installed_page_remove_cb(template);
                    };
                  }
                };
              };
            };
          };
        };

        [top]
        Adw.HeaderBar top_header_bar {
          [start]
          Button go_back {
            has-tooltip: true;
            tooltip-text: _("Go Back");
            icon-name: "go-previous-symbolic";
            clicked => $go_back_cb(template);
          }

          // [start]
          // Button refresh {
          //   has-tooltip: true;
          //   tooltip-text: _("Refresh");
          //   icon-name: "view-refresh-symbolic";
          //   sensitive: bind $invert_boolean(template.state as <$BzStateInfo>.busy) as <bool>;
          //   clicked => $refresh_cb(template);
          // }

          [start]
          ToggleButton search {
            has-tooltip: true;
            tooltip-text: _("Search");
            icon-name: "system-search-symbolic";
            active: bind search_split.show-sidebar bidirectional;
          }

          [start]
          Button update_button {
            styles [
              "suggested-action",
            ]

            has-tooltip: true;
            tooltip-text: _("Update");
            icon-name: "software-update-available-symbolic";
            visible: bind $invert_boolean($is_null(template.state as <$BzStateInfo>.available-updates) as <bool>) as <bool>;
            clicked => $update_cb(template);
          }

          [start]
          Box {
            orientation: horizontal;
            spacing: 10;
            visible: bind template.state as <$BzStateInfo>.checking-for-updates;

            Adw.Spinner {}

            Label {
              label: _("Checking for updates");
            }
          }
          
          title-widget: Revealer title_revealer {
            transition-type: crossfade;
            transition-duration: 200;

            child: Adw.ToggleGroup title_toggle_group {
              styles [
                "flat",
                "round",
              ]
              homogeneous: true;

              Adw.Toggle curated_toggle {
                tooltip: _("View curated applications");
                name: "curated";

                child: Box {
                  halign: center;
                  margin-start: 15;
                  margin-end: 15;
                  orientation: horizontal;
                  spacing: 6;

                  Image {
                    icon-name: "starred-symbolic";
                  }

                  Label {
                    label: _("Curated");
                  }
                };
              }

              Adw.Toggle {
                tooltip: _("View the latest on Flathub");
                name: "flathub";

                child: Box {
                  halign: center;
                  margin-start: 15;
                  margin-end: 15;
                  orientation: horizontal;
                  spacing: 6;

                  Image {
                    icon-name: "flatpak-symbolic";
                  }

                  Label {
                    label: _("Flathub");
                  }
                };
              }
              
              Adw.Toggle {
                tooltip: _("View installed applications");
                name: "installed";

                child: Box {
                  halign: center;
                  margin-start: 15;
                  margin-end: 15;
                  orientation: horizontal;
                  spacing: 6;

                  Image {
                    icon-name: "library-symbolic";
                  }

                  Label {
                    label: _("Installed");
                  }
                };
              }

              notify::active-name => $page_toggled_cb(template);
            };
          };

          [end]
          MenuButton {
            primary: true;
            icon-name: "open-menu-symbolic";
            has-tooltip: true;
            tooltip-text: _("Main Menu");
            menu-model: primary_menu;
          }

          [end]
          ToggleButton toggle_transactions {
            styles [
              "flat",
            ]

            has-tooltip: true;
            tooltip-text: _("Toggle transaction sidebar");
            active: bind split_view.show-sidebar bidirectional;

            child: $BzGlobalProgress {
              expand-size: 125;
              active: bind template.state as <$BzStateInfo>.transaction-manager as <$BzTransactionManager>.active;
              fraction: bind template.state as <$BzStateInfo>.transaction-manager as <$BzTransactionManager>.current-progress;

              child: Image {
                halign: end;
                icon-name: "folder-download-symbolic";
              };
            };
          }
        }

        [bottom]
        Adw.HeaderBar bottom_header_bar {
          show-start-title-buttons: false;
          show-end-title-buttons: false;
        }
      };

      Adw.Breakpoint {
        condition ("max-width: 1200px")

        setters {
          split_view.collapsed: true;
          transactions.width-request: 250;
          search_widget.width-request: 250;
        }

        apply => $breakpoint_apply_cb(template);
        unapply => $breakpoint_unapply_cb(template);
      }
    };
  };
}

menu primary_menu {
  section {
    item {
      label: _("_Refresh");
      action: "app.refresh";
    }
    
    item {
      label: _("_Keyboard Shortcuts");
      action: "win.show-help-overlay";
    }

    item {
      label: _("_About Bazaar");
      action: "app.about";
    }

    item {
      label: _("_Donate to Bazaar ❤️");
      action: "app.donate";
    }
  }
}
