using Gtk 4.0;
using Adw 1;

template $BzSectionView: Adw.Bin {
  child: Box {
    orientation: vertical;
    spacing: 5;

    Label {
      styles [
        "heading",
        "error",
      ]

      wrap: true;
      wrap-mode: word_char;
      xalign: 0;
      visible: bind $invert_boolean($is_null(template.section as <$BzContentSection>.error) as <bool>) as <bool>;
      label: bind template.section as <$BzContentSection>.error;
    }

    Overlay {
      hexpand: true;

      child: Revealer {
        transition-type: crossfade;
        transition-duration: 500;
        height-request: bind template.section as <$BzContentSection>.banner-height;
        reveal-child: bind template.section as <$BzContentSection>.banner as <$BzAsyncTexture>.loaded;

        child: Picture {
          css-name: "banner";

          styles [
            "browser-banner",
          ]

          can-shrink: true;
          paintable: bind $get_banner(template.section as <$BzContentSection>.banner as <$GdkPaintable>) as <$GdkPaintable>;
          content-fit: bind template.section as <$BzContentSection>.banner-fit;
        };
      };

      [overlay]
      Overlay banner_text_overlay {
        css-name: "banner-text-overlay";
        hexpand: false;
        vexpand: false;

        child: Box banner_text_bg {
          css-name: "banner-text-bg";
        };

        halign: bind template.section as <$BzContentSection>.banner-text-halign;
        valign: bind template.section as <$BzContentSection>.banner-text-valign;

        [overlay]
        Box banner_text {
          css-name: "banner-text";
          hexpand: false;
          vexpand: false;
          halign: center;
          valign: center;
          orientation: vertical;
          spacing: 5;

          Label {
            css-name: "title";

            styles [
              "browser-banner-title",
            ]

            wrap: true;
            wrap-mode: word_char;
            ellipsize: end;
            lines: 3;
            margin-start: 25;
            margin-end: 25;

            visible: bind $invert_boolean($is_null(template.section as <$BzContentSection>.title) as <bool>) as <bool>;
            xalign: bind template.section as <$BzContentSection>.banner-text-label-xalign;
            label: bind template.section as <$BzContentSection>.title;
          }

          Label {
            css-name: "subtitle";

            styles [
              "browser-banner-subtitle",
            ]

            wrap: true;
            wrap-mode: word_char;
            ellipsize: end;
            lines: 3;
            margin-start: 25;
            margin-end: 25;

            visible: bind $invert_boolean($is_null(template.section as <$BzContentSection>.subtitle) as <bool>) as <bool>;
            xalign: bind template.section as <$BzContentSection>.banner-text-label-xalign;
            label: bind template.section as <$BzContentSection>.subtitle;
          }

          Label {
            css-name: "description";

            styles [
              "browser-banner-description",
            ]

            wrap: true;
            wrap-mode: word_char;
            ellipsize: end;
            lines: 10;
            margin-start: 25;
            margin-end: 25;

            visible: bind $invert_boolean($is_null(template.section as <$BzContentSection>.description) as <bool>) as <bool>;
            xalign: bind template.section as <$BzContentSection>.banner-text-label-xalign;
            label: bind template.section as <$BzContentSection>.description;
          }
        }
      }
    }

    $BzDynamicListView {
      margin-start: 20;
      margin-end: 20;
      margin-top: 20;
      margin-bottom: 20;
      hexpand: true;
      scroll: false;
      noscroll-kind: flow-box;
      child-type: "BzCuratedAppTile";
      child-prop: "group";
      model: bind template.section as <$BzContentSection>.appids;
      bind-widget => $bind_widget_cb(template);      
      unbind-widget => $unbind_widget_cb(template);      
    }
  };
}
